//Finding the largest palindrome made from the product of two-digit numbers.

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>



int pncheck(int N);//Function for checking if a number is palindromic or not 

int main(){
    int m,k=0,arr[10000];
    
    for(int i=1;i<=999;i++){
        for(int j=i+1;j<=999;j++){
            m=i*j;//product            
            if(pncheck(m)==1){//checking if m is palindromic number 
                arr[k]=m;//Storing palindromic numbers in a array
                k++;
            }
        }
    }
    int max=arr[0];
    for(int i=0;i<=k-1;i++){
        if(arr[i]>max){//finding put the maximum palindromic number 
            max=arr[i];
        }
    }
    printf("%d",max);//printing the maximum palindromic number 
    return 0;
}

int pncheck(int N){
    int v=N,d,r=0,a;//v-saving a original number 
    while(N>0){
        d=N%10;//last digit
        r=r*10+d;//reverse number
        N=N/10;//n being updated after every step
    }
    if(v==r){//if original number=reverse number then a palindromic number
        a=1;
    }
    else{
        a=0;
    }
    return a;
}
